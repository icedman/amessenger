{>"layouts/master" /}

{<body}
    <h1>Hello, {name}</h1>
{/body}


<div id="app" class="container">

<div class="input-group">
    <input class="form-control" type="text" class="form-control" v-model="username" v-on:keyup.enter="join" placeholder="Username">
    <span class="input-group-btn">
        <button class="btn btn-default" type="button" v-on:click="join">Join</button>
    </span>
</div>

    <ul>
        <li v-for="message in messages">{{ message }}</li>
    </ul>

<div class="field-group">
<input class="form-control" type="text" class="form-control" v-model="to" placeholder="To:">
<br>
</div>

<div class="input-group">
    <input class="form-control" type="text" class="form-control" v-focus="true" v-model="message" v-on:keyup.enter="send" placeholder="Message text...">
    <span class="input-group-btn">
        <button class="btn btn-default" type="button" v-on:click="send">Send</button>
    </span>
</div>

</div>

<script>
/* global io: true */
/* global Vue: true */

var socket = io();

new Vue({
    el: '#app',

    data: {
        username: '',
        to: '',
        message: '',
        messages: [],
        members: {}
    },
    methods: {
        join: function() {
            socket.emit('join', this.username);
            console.log('joining as ' + this.username);
            this.message = '';
        },
        send: function() {
            socket.emit('send', { to:this.to, message:this.message } );
            console.log('sending ' + this.message);
            this.message = '';
        }
    },

    mounted: function() {
        socket.on('messages', function(message) {
            this.messages.push(message);
        }.bind(this));

        socket.on('member_add', function(member) {
            Vue.set(this.members, member.socket, member);
        }.bind(this));

        socket.on('member_delete', function(socket_id) {
            Vue.delete(this.members, socket_id);
        }.bind(this));

        socket.on('message_history', function(messages) {
            this.messages = messages;
        }.bind(this));

        socket.on('member_history', function(members) {
            this.members = members;
        }.bind(this));
    }
});

</script>
