{>"layouts/master" /}

<style>
.container {
    padding: 20px;
}
</style>
<div id="app" class="container">

<div v-if="logged!==true">
    <div class="input-group">
        <input v-focus="true" class="form-control" type="text" class="form-control" v-model="username" v-on:keyup.enter="login" placeholder="Username">
        <span class="input-group-btn">
            <button class="btn btn-default" type="button" v-on:click="login">Login</button>
        </span>
    </div>
</div>

<div v-if="logged===true">

    <h2>{{ username }}</h2>

    <div class="container">
    <ul>
        <li v-for="message in messages">#{{ message.channel }} : {{ message.from }} : {{ message.message }}</li>
    </ul>
    </div>

    <div class="field-group">
    <input class="form-control" type="text" class="form-control" v-model="to" placeholder="To:">
    <br>
    </div>

    <div class="input-group">
        <input class="form-control" type="text" class="form-control" v-model="message" v-on:keyup.enter="send" placeholder="Message text...">
        <span class="input-group-btn">
            <button class="btn btn-default" type="button" v-on:click="send">Send</button>
        </span>
    </div>

</div>

</div>

<script>
/* global io: true */
/* global Vue: true */

var socket = io();

new Vue({
    el: '#app',

    data: {
        logged: false,
        username: 'marvin',
        to: 'poker',
        message: '',
        messages: [],
        members: {}
    },
    methods: {
        login: function() {
            this.logged = true;
            this.message = '/join poker';
            this.messages = [];

            this.send();
        },
        send: function() {
            socket.emit('message', { from:this.username, to:this.to, message:this.message } );
            console.log('sending ' + this.message);
            this.message = '';
        }
    },

    mounted: function() {
        socket.on('message', function(message) {
            if (message.history != undefined) {
                message.history.map( m => { 
                    this.messages.push(m);
                });
            }
            this.messages.push(message);
        }.bind(this));
    }
});

</script>
